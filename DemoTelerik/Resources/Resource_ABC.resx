<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abreviatura" xml:space="preserve">
    <value>Abreviatura</value>
  </data>
  <data name="Accion" xml:space="preserve">
    <value>Acción</value>
  </data>
  <data name="ActivarAusentismo" xml:space="preserve">
    <value>Activar Ausentismo</value>
  </data>
  <data name="Activo" xml:space="preserve">
    <value>Activo</value>
  </data>
  <data name="Acumulacion" xml:space="preserve">
    <value>Acumulación</value>
  </data>
  <data name="Anadir" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="AnadirNuevoCampo" xml:space="preserve">
    <value>Añadir Nuevo Campo</value>
  </data>
  <data name="AnadirNuevoPaso" xml:space="preserve">
    <value>Añadir Nuevo Paso</value>
  </data>
  <data name="AnadirValores" xml:space="preserve">
    <value>Añadir Valores</value>
  </data>
  <data name="Anno" xml:space="preserve">
    <value>Año</value>
  </data>
  <data name="Apellidos" xml:space="preserve">
    <value>Apellidos</value>
  </data>
  <data name="Aprobaciones" xml:space="preserve">
    <value>Aprobaciones</value>
  </data>
  <data name="AprobacionSolicitud" xml:space="preserve">
    <value>Aprobación Solicitud</value>
  </data>
  <data name="Aprobar" xml:space="preserve">
    <value>Aprobar</value>
  </data>
  <data name="Archivo" xml:space="preserve">
    <value>Archivo</value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>Área</value>
  </data>
  <data name="AsignarFlujos" xml:space="preserve">
    <value>Asignar Flujos</value>
  </data>
  <data name="AsignarPermisos" xml:space="preserve">
    <value>Asignar Permisos</value>
  </data>
  <data name="AsignarUsuarios" xml:space="preserve">
    <value>Asignar Usuarios</value>
  </data>
  <data name="AsignarVacaciones" xml:space="preserve">
    <value>Asignar vacaciones</value>
  </data>
  <data name="AsuntoSolicitud" xml:space="preserve">
    <value>Asunto Solicitud</value>
  </data>
  <data name="Auditoria" xml:space="preserve">
    <value>Creado por: {0} - {1} | Modificado por: {2} - {3}</value>
  </data>
  <data name="Ausentismo" xml:space="preserve">
    <value>Ausentismo</value>
  </data>
  <data name="BajaEmpleado" xml:space="preserve">
    <value>Baja Empleado</value>
  </data>
  <data name="BibliotecaFestivo" xml:space="preserve">
    <value>Biblioteca Festivo</value>
  </data>
  <data name="BibliotecaFestivos" xml:space="preserve">
    <value>Biblioteca Festivos</value>
  </data>
  <data name="BoletaPago" xml:space="preserve">
    <value>Boleta de Pago</value>
  </data>
  <data name="Calendario" xml:space="preserve">
    <value>Calendario</value>
  </data>
  <data name="CambiarMiContrasena" xml:space="preserve">
    <value>Cambiar mi contraseña</value>
  </data>
  <data name="CambioContrato" xml:space="preserve">
    <value>Cambio Contrato</value>
  </data>
  <data name="CambioDeContrasena" xml:space="preserve">
    <value>Cambio de contraseña</value>
  </data>
  <data name="CambioEstructura" xml:space="preserve">
    <value>Cambio Estructura</value>
  </data>
  <data name="CambioPuesto" xml:space="preserve">
    <value>Cambio Puesto</value>
  </data>
  <data name="CambioSalario" xml:space="preserve">
    <value>Cambio Salario</value>
  </data>
  <data name="Campo" xml:space="preserve">
    <value>Campo</value>
  </data>
  <data name="CamposConfigurados" xml:space="preserve">
    <value>Campos Configurados</value>
  </data>
  <data name="CantidadDependientes" xml:space="preserve">
    <value>Cantidad Dependientes</value>
  </data>
  <data name="CantidadDias" xml:space="preserve">
    <value>Cantidad de días</value>
  </data>
  <data name="CargaMasiva" xml:space="preserve">
    <value>Carga Masiva</value>
  </data>
  <data name="CentroCosto" xml:space="preserve">
    <value>Centro de Costo</value>
  </data>
  <data name="CerrarSesion" xml:space="preserve">
    <value>Cerrar sesión</value>
  </data>
  <data name="CertificadoQuinta" xml:space="preserve">
    <value>Certificado de Quinta</value>
  </data>
  <data name="CertificadoTrabajo" xml:space="preserve">
    <value>Certificado de Trabajo</value>
  </data>
  <data name="Claro" xml:space="preserve">
    <value>Claro</value>
  </data>
  <data name="Codigo" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="CodigoAfpNet" xml:space="preserve">
    <value>Código AFPnet</value>
  </data>
  <data name="CodigoDeEmpleadoExiste" xml:space="preserve">
    <value>Código de empleado existe</value>
  </data>
  <data name="CodigoEmpleado" xml:space="preserve">
    <value>Código Empleado</value>
  </data>
  <data name="CodigoEmpleadoDigitado" xml:space="preserve">
    <value>Código Empleado Digitado</value>
  </data>
  <data name="CodigoIso" xml:space="preserve">
    <value>Código ISO</value>
  </data>
  <data name="CodigoPostal" xml:space="preserve">
    <value>Código Postal</value>
  </data>
  <data name="CodigoSunat" xml:space="preserve">
    <value>Código Sunat</value>
  </data>
  <data name="Colaboradores" xml:space="preserve">
    <value>Colaboradores</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ColorEmpresa" xml:space="preserve">
    <value>Color Empresa</value>
  </data>
  <data name="ColorTablas" xml:space="preserve">
    <value>Color de Tablas</value>
  </data>
  <data name="CompleteLosCamposObligatorios" xml:space="preserve">
    <value>Complete los campos obligatorios.</value>
  </data>
  <data name="Configuracion" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="Configuraciones" xml:space="preserve">
    <value>Configuraciones</value>
  </data>
  <data name="ConfiguracionesEmpresa" xml:space="preserve">
    <value>Configuraciones Empresa</value>
  </data>
  <data name="ConfiguracionPassword" xml:space="preserve">
    <value>Configuración Password</value>
  </data>
  <data name="ConfiguracionSmtp" xml:space="preserve">
    <value>Configuración Smtp</value>
  </data>
  <data name="ConfiguracionVacaciones" xml:space="preserve">
    <value>Configuración de Vacaciones</value>
  </data>
  <data name="ConfigurarFlujo" xml:space="preserve">
    <value>Configurar Flujo</value>
  </data>
  <data name="ConfirmaTuContrasena" xml:space="preserve">
    <value>Confirma tu contraseña</value>
  </data>
  <data name="Consideracion" xml:space="preserve">
    <value>Consideración</value>
  </data>
  <data name="ConstanciaCese" xml:space="preserve">
    <value>Constancia de Cese</value>
  </data>
  <data name="Contrasena" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="ContrasenaAnterior" xml:space="preserve">
    <value>Contraseña Anterior</value>
  </data>
  <data name="ContrasenaNueva" xml:space="preserve">
    <value>Contraseña Nueva</value>
  </data>
  <data name="Contrato" xml:space="preserve">
    <value>Contrato</value>
  </data>
  <data name="Controlador" xml:space="preserve">
    <value>Controlador</value>
  </data>
  <data name="CopiarFlujo" xml:space="preserve">
    <value>Copiar Flujo</value>
  </data>
  <data name="CopiarFormulario" xml:space="preserve">
    <value>Copiar Formulario</value>
  </data>
  <data name="CorreoElectronico" xml:space="preserve">
    <value>Correo Electrónico</value>
  </data>
  <data name="Cts" xml:space="preserve">
    <value>Cts</value>
  </data>
  <data name="CuerpoAprobacionSolicitud" xml:space="preserve">
    <value>Cuerpo Aprobacion Solicitud</value>
  </data>
  <data name="CuerpoSolicitud" xml:space="preserve">
    <value>Cuerpo Solicitud</value>
  </data>
</root>