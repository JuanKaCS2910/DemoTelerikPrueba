<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abreviatura" xml:space="preserve">
    <value>Abbreviation</value>
  </data>
  <data name="Accion" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ActivarAusentismo" xml:space="preserve">
    <value>Activate Truancy</value>
  </data>
  <data name="Activo" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Acumulacion" xml:space="preserve">
    <value>Accumulation</value>
  </data>
  <data name="Anadir" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AnadirNuevoCampo" xml:space="preserve">
    <value>Add New Field</value>
  </data>
  <data name="AnadirNuevoPaso" xml:space="preserve">
    <value>Add New Step</value>
  </data>
  <data name="AnadirValores" xml:space="preserve">
    <value>Add Values</value>
  </data>
  <data name="Anno" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Apellidos" xml:space="preserve">
    <value>Surnames</value>
  </data>
  <data name="Aprobaciones" xml:space="preserve">
    <value>Approvals</value>
  </data>
  <data name="AprobacionSolicitud" xml:space="preserve">
    <value>Application Approval</value>
  </data>
  <data name="Aprobar" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Archivo" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="AsignarFlujos" xml:space="preserve">
    <value>Assign Flows</value>
  </data>
  <data name="AsignarPermisos" xml:space="preserve">
    <value>Assign Permissions</value>
  </data>
  <data name="AsignarUsuarios" xml:space="preserve">
    <value>Assign Users</value>
  </data>
  <data name="AsignarVacaciones" xml:space="preserve">
    <value>Assign vacation</value>
  </data>
  <data name="AsuntoSolicitud" xml:space="preserve">
    <value>Subject Request</value>
  </data>
  <data name="Auditoria" xml:space="preserve">
    <value>Created by: {0} - {1} | Modified by: {2} - {3}</value>
  </data>
  <data name="Ausentismo" xml:space="preserve">
    <value>Absenteeism</value>
  </data>
  <data name="BajaEmpleado" xml:space="preserve">
    <value>Employee Termination</value>
  </data>
  <data name="BibliotecaFestivo" xml:space="preserve">
    <value>Festive Library</value>
  </data>
  <data name="BibliotecaFestivos" xml:space="preserve">
    <value>Library Holidays</value>
  </data>
  <data name="BoletaPago" xml:space="preserve">
    <value>Voucher</value>
  </data>
  <data name="Calendario" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="CambiarMiContrasena" xml:space="preserve">
    <value>Change my password</value>
  </data>
  <data name="CambioContrato" xml:space="preserve">
    <value>Change Contract</value>
  </data>
  <data name="CambioDeContrasena" xml:space="preserve">
    <value>Change of password</value>
  </data>
  <data name="CambioEstructura" xml:space="preserve">
    <value>Structure change</value>
  </data>
  <data name="CambioPuesto" xml:space="preserve">
    <value>Position Change</value>
  </data>
  <data name="CambioSalario" xml:space="preserve">
    <value>Change Salary</value>
  </data>
  <data name="Campo" xml:space="preserve">
    <value>Field</value>
  </data>
  <data name="CamposConfigurados" xml:space="preserve">
    <value>Configured Fields</value>
  </data>
  <data name="CantidadDependientes" xml:space="preserve">
    <value>Quantity Dependents</value>
  </data>
  <data name="CantidadDias" xml:space="preserve">
    <value>Number of days</value>
  </data>
  <data name="CargaMasiva" xml:space="preserve">
    <value>Bulk Load</value>
  </data>
  <data name="CentroCosto" xml:space="preserve">
    <value>Cost Center</value>
  </data>
  <data name="CerrarSesion" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="CertificadoQuinta" xml:space="preserve">
    <value>Fifth Certificate</value>
  </data>
  <data name="CertificadoTrabajo" xml:space="preserve">
    <value>Job certificate</value>
  </data>
  <data name="Claro" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Codigo" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="CodigoAfpNet" xml:space="preserve">
    <value>AFPnet code</value>
  </data>
  <data name="CodigoDeEmpleadoExiste" xml:space="preserve">
    <value>Employee code exists</value>
  </data>
  <data name="CodigoEmpleado" xml:space="preserve">
    <value>Employee Code</value>
  </data>
  <data name="CodigoEmpleadoDigitado" xml:space="preserve">
    <value>Code Employee Digited</value>
  </data>
  <data name="CodigoIso" xml:space="preserve">
    <value>ISO code</value>
  </data>
  <data name="CodigoPostal" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="CodigoSunat" xml:space="preserve">
    <value>Sunat code</value>
  </data>
  <data name="Colaboradores" xml:space="preserve">
    <value>Collaborators</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ColorEmpresa" xml:space="preserve">
    <value>Company Color</value>
  </data>
  <data name="ColorTablas" xml:space="preserve">
    <value>Tables Color</value>
  </data>
  <data name="CompleteLosCamposObligatorios" xml:space="preserve">
    <value>Complete the required fields.</value>
  </data>
  <data name="Configuracion" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Configuraciones" xml:space="preserve">
    <value>Configurations</value>
  </data>
  <data name="ConfiguracionesEmpresa" xml:space="preserve">
    <value>Company Settings</value>
  </data>
  <data name="ConfiguracionPassword" xml:space="preserve">
    <value>Password Configuration</value>
  </data>
  <data name="ConfiguracionSmtp" xml:space="preserve">
    <value>Smtp configuration</value>
  </data>
  <data name="ConfiguracionVacaciones" xml:space="preserve">
    <value>Vacation Settings</value>
  </data>
  <data name="ConfigurarFlujo" xml:space="preserve">
    <value>Configure Flow</value>
  </data>
  <data name="ConfirmaTuContrasena" xml:space="preserve">
    <value>Confirm your password</value>
  </data>
  <data name="Consideracion" xml:space="preserve">
    <value>Consideration</value>
  </data>
  <data name="ConstanciaCese" xml:space="preserve">
    <value>Certificate of Termination</value>
  </data>
  <data name="Contrasena" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ContrasenaAnterior" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="ContrasenaNueva" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Contrato" xml:space="preserve">
    <value>Contract</value>
  </data>
  <data name="Controlador" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="CopiarFlujo" xml:space="preserve">
    <value>Copy Flow</value>
  </data>
  <data name="CopiarFormulario" xml:space="preserve">
    <value>Copy Form</value>
  </data>
  <data name="CorreoElectronico" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Cts" xml:space="preserve">
    <value>Cts</value>
  </data>
  <data name="CuerpoSolicitud" xml:space="preserve">
    <value>Subject Body</value>
  </data>
</root>